{"ast":null,"code":"var _jsxFileName = \"/home/agust/Cursos/Redux-Toolkit/71-rtk-query-advanced/src/components/SoloUser.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { selectUserById } from \"../features/usersSlice\";\nimport { useGetPostsByUserIdQuery } from \"../features/postsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoloUser = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const user = useSelector(state => selectUserById(state, Number(userId)));\n  const {\n    data: postsForUser,\n    isLoading,\n    isSuccess,\n    isError,\n    error\n  } = useGetPostsByUserIdQuery(userId);\n  let content;\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, this);\n  } else if (isSuccess) {\n    const {\n      ids,\n      entities\n    } = postsForUser;\n    content = ids.map(id => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `post/${id}`,\n        children: [\" \", entities[id].title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this));\n  } else if (isError) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Posts from \", user.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(SoloUser, \"kl03AT6UhrAqvicdOhjgu7cxpVY=\", false, function () {\n  return [useParams, useSelector, useGetPostsByUserIdQuery];\n});\n_c = SoloUser;\nexport default SoloUser;\nvar _c;\n$RefreshReg$(_c, \"SoloUser\");","map":{"version":3,"names":["useSelector","Link","useParams","selectUserById","useGetPostsByUserIdQuery","jsxDEV","_jsxDEV","SoloUser","_s","userId","user","state","Number","data","postsForUser","isLoading","isSuccess","isError","error","content","children","fileName","_jsxFileName","lineNumber","columnNumber","ids","entities","map","id","to","title","name","_c","$RefreshReg$"],"sources":["/home/agust/Cursos/Redux-Toolkit/71-rtk-query-advanced/src/components/SoloUser.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { selectUserById } from \"../features/usersSlice\";\nimport { useGetPostsByUserIdQuery } from \"../features/postsSlice\";\n\n\nconst SoloUser = () => {\n\n    const { userId } = useParams()\n\n    const user = useSelector(state => selectUserById(state,  Number(userId)))\n\n    const { \n        data: postsForUser,\n        isLoading, \n        isSuccess, \n        isError, \n        error\n    } = useGetPostsByUserIdQuery(userId)\n\n    let content;\n    if (isLoading) {\n        content = <p> Loading... </p>\n    } else if (isSuccess) {\n        const { ids, entities } = postsForUser\n        content = ids.map(id => (\n            <div key={id}>\n                <Link to={`post/${id}`}> { entities[id].title} </Link>\n            </div>\n        ))\n    } else if (isError) {\n        content = <p> { error } </p>\n    }\n\n    return (\n        <div>\n            <h2> Posts from { user.name } </h2>\n        { content } \n        </div>\n    )\n\n\n}\nexport default SoloUser\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,wBAAwB,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,EAAE;EAE9B,MAAMQ,IAAI,GAAGV,WAAW,CAACW,KAAK,IAAIR,cAAc,CAACQ,KAAK,EAAGC,MAAM,CAACH,MAAM,CAAC,CAAC,CAAC;EAEzE,MAAM;IACFI,IAAI,EAAEC,YAAY;IAClBC,SAAS;IACTC,SAAS;IACTC,OAAO;IACPC;EACJ,CAAC,GAAGd,wBAAwB,CAACK,MAAM,CAAC;EAEpC,IAAIU,OAAO;EACX,IAAIJ,SAAS,EAAE;IACXI,OAAO,gBAAGb,OAAA;MAAAc,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EACjC,CAAC,MAAM,IAAIR,SAAS,EAAE;IAClB,MAAM;MAAES,GAAG;MAAEC;IAAS,CAAC,GAAGZ,YAAY;IACtCK,OAAO,GAAGM,GAAG,CAACE,GAAG,CAACC,EAAE,iBAChBtB,OAAA;MAAAc,QAAA,eACId,OAAA,CAACL,IAAI;QAAC4B,EAAE,EAAG,QAAOD,EAAG,EAAE;QAAAR,QAAA,GAAC,GAAC,EAAEM,QAAQ,CAACE,EAAE,CAAC,CAACE,KAAK,EAAC,GAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO,GADhDI,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGf,CAAC;EACN,CAAC,MAAM,IAAIP,OAAO,EAAE;IAChBE,OAAO,gBAAGb,OAAA;MAAAc,QAAA,GAAG,GAAC,EAAEF,KAAK,EAAE,GAAC;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAChC;EAEA,oBACIlB,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,GAAI,cAAY,EAAEV,IAAI,CAACqB,IAAI,EAAE,GAAC;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACrCL,OAAO;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAId,CAAC;AAAAhB,EAAA,CApCKD,QAAQ;EAAA,QAESL,SAAS,EAEfF,WAAW,EAQpBI,wBAAwB;AAAA;AAAA4B,EAAA,GAZ1BzB,QAAQ;AAqCd,eAAeA,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}